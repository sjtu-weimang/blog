<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>JavaScript中的正则表达式</title>
      <link href="/blog/2024/04/11/JavaScirpt%E4%B8%AD%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/blog/2024/04/11/JavaScirpt%E4%B8%AD%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="RegExp"><a href="#RegExp" class="headerlink" title="RegExp"></a>RegExp</h3><p>ECMAJavaScript通过RegExp类型支持正则表达式，可用于字符串按照一定规则的匹配。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">let expression =/pattern/flags</span><br></pre></td></tr></table></figure><h4 id="正则表达式中的元字符"><a href="#正则表达式中的元字符" class="headerlink" title="正则表达式中的元字符"></a>正则表达式中的元字符</h4><p>元字符是正则表达式中的特殊字符，用于表示一些特定的模式。在匹配元字符时必须使用反斜杠’&#39;进行转义，<br>以下是常见的元字符：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">()[]&#123;&#125;\^$|.?*+</span><br></pre></td></tr></table></figure><h4 id="常见的匹配规则"><a href="#常见的匹配规则" class="headerlink" title="常见的匹配规则"></a>常见的匹配规则</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> \d: 匹配一个数字。</span><br><span class="line"><span class="number">2.</span> \w: 匹配一个字母或数字。</span><br><span class="line"><span class="number">3.</span> \s: 匹配一个空白字符。</span><br><span class="line"><span class="number">4.</span> \b: 匹配一个单词边界。</span><br><span class="line"><span class="number">5.</span> \D: 匹配一个非数字的字符。</span><br><span class="line"><span class="number">6.</span> \W: 匹配一个非字母或数字的字符。</span><br><span class="line"><span class="number">7.</span> \S: 匹配一个非空白字符。</span><br><span class="line"><span class="number">8.</span> \[abcd\]: 匹配方括号中的任意一个字符。</span><br><span class="line"><span class="number">9.</span> \[^abcd\]: 匹配不在方括号中的任意一个字符。</span><br><span class="line"><span class="number">10.</span> \[a-z\]: 匹配指定范围内的任意一个字符。</span><br><span class="line"><span class="number">11.</span> abc$: 匹配以abc结尾的字符串。</span><br><span class="line"><span class="number">12.</span> ^abc: 匹配以abc开头的字符串。</span><br><span class="line"><span class="number">13.</span> \d&#123;<span class="number">3</span>&#125;: 匹配三个数字。</span><br><span class="line"><span class="number">14.</span> a?: 匹配零个或一个a，效果等同于a&#123;<span class="number">0</span>,<span class="number">1</span>&#125;。</span><br><span class="line"><span class="number">15.</span> a*: 匹配零个或多个a，效果等同于a&#123;<span class="number">0</span>,&#125;。</span><br><span class="line"><span class="number">16.</span> a+: 匹配一个或多个a，效果等同于a&#123;<span class="number">1</span>,&#125;。</span><br><span class="line"><span class="number">17.</span> a|b: 匹配a或b，效果等同于a&#123;<span class="number">0</span>,<span class="number">1</span>&#125;|b&#123;<span class="number">0</span>,<span class="number">1</span>&#125;。</span><br><span class="line"><span class="number">18.</span> (abc): 匹配abc，并将匹配结果保存到括号中。</span><br><span class="line"><span class="number">19.</span> (?:abc): 匹配abc，但不保存匹配结果到括号中。</span><br><span class="line"><span class="number">20.</span> (?=abc): 正向先行断言，匹配后面跟着abc的字符串。</span><br><span class="line"><span class="number">21.</span> (?!abc): 负向先行断言，匹配后面不跟着abc的字符串。</span><br><span class="line"><span class="number">22.</span> (?&lt;=abc): 反向先行断言，匹配前面跟着abc的字符串。</span><br><span class="line"><span class="number">23.</span> (?&lt;!abc): 负向反向先行断言，匹配前面不跟着abc的字符串。</span><br><span class="line"><span class="number">24.</span> \bhello\b: 匹配包含hello的单词,\b表示字符边界。</span><br><span class="line"><span class="number">25.</span> \Bhello\B: 匹配不包含hello的单词,\B表示非字符边界。 </span><br></pre></td></tr></table></figure><h4 id="匹配模式的标记flag"><a href="#匹配模式的标记flag" class="headerlink" title="匹配模式的标记flag"></a>匹配模式的标记flag</h4><p>每个正则表达式后方可以附带一个或多个标记，用于控制正则表达式的行为。以下是常见的标记：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">g: 全局匹配，匹配字符串中所有满足正则表达式的内容。</span><br><span class="line">i: 不区分大小写，匹配时忽略pattern和字符串的大小写。</span><br><span class="line">m: 多行模式，在查找到一行的末尾后会继续查找。</span><br><span class="line">y: 粘附模式，只查找从lastIndex开始及之后的字符串。</span><br></pre></td></tr></table></figure><h3 id="JS中创建正则表达式"><a href="#JS中创建正则表达式" class="headerlink" title="JS中创建正则表达式"></a>JS中创建正则表达式</h3><h4 id="字面量"><a href="#字面量" class="headerlink" title="字面量"></a>字面量</h4><p>正则表达式可以直接使用字面量创建，表达式的内容写在两个斜杠‘&#x2F;’之间。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">let expression = /pattern/flags</span><br></pre></td></tr></table></figure><h4 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h4><p>正则表达式也可以使用构造函数创建，构造函数的参数为两个，第一个为pattern，第二个为flags。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">let expression = new RegExp(pattern, flags)</span><br></pre></td></tr></table></figure><h3 id="测试正则表达式"><a href="#测试正则表达式" class="headerlink" title="测试正则表达式"></a>测试正则表达式</h3><h4 id="test-方法"><a href="#test-方法" class="headerlink" title="test()方法"></a>test()方法</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">let expression = /pattern/flags</span><br><span class="line">let result = expression.test(string)</span><br></pre></td></tr></table></figure><h4 id="exec-方法"><a href="#exec-方法" class="headerlink" title="exec()方法"></a>exec()方法</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">let expression = /pattern/flags</span><br><span class="line">let result = expression.exec(string)</span><br></pre></td></tr></table></figure><h3 id="字符串方法"><a href="#字符串方法" class="headerlink" title="字符串方法"></a>字符串方法</h3><h4 id="search-方法"><a href="#search-方法" class="headerlink" title="search()方法"></a>search()方法</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">let expression = /pattern/flags</span><br><span class="line">let result = string.search(expression)</span><br></pre></td></tr></table></figure><p>&#96;</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>使用hexo部署博客的操作流程和踩过的一些坑</title>
      <link href="/blog/2024/04/11/%E5%85%B3%E4%BA%8E%E4%BD%BF%E7%94%A8hexo%E5%9C%A8github%E4%B8%8A%E9%83%A8%E7%BD%B2%E5%8D%9A%E5%AE%A2%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91%E7%82%B9/"/>
      <url>/blog/2024/04/11/%E5%85%B3%E4%BA%8E%E4%BD%BF%E7%94%A8hexo%E5%9C%A8github%E4%B8%8A%E9%83%A8%E7%BD%B2%E5%8D%9A%E5%AE%A2%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91%E7%82%B9/</url>
      
        <content type="html"><![CDATA[<p>使用hexo部署个人博客教程</p><h1 id="部署流程简介"><a href="#部署流程简介" class="headerlink" title="部署流程简介"></a>部署流程简介</h1><h2 id="建立本地仓库"><a href="#建立本地仓库" class="headerlink" title="建立本地仓库"></a>建立本地仓库</h2><p>1.hexo依赖于node.js环境运行，在安装node.js后，使用npm安装hexo<br>2.使用hexo init 初始化一个本地仓库<br>3.使用hexo g 生成静态文件<br>4.使用hexo s 启动本地服务器，可以预览效果</p><pre><code><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g     <span class="comment">#在全局安装hexo</span></span><br><span class="line">hexo init blog              <span class="comment">#初始化</span></span><br><span class="line"><span class="built_in">cd</span> blog                     <span class="comment">#进入文件目录</span></span><br><span class="line">npm install                 <span class="comment">#安装依赖</span></span><br><span class="line">hexo server                 <span class="comment">#在本地服务器运行</span></span><br></pre></td></tr></table></figure></code></pre><p>这时候个人博客已经可以在本地服务器的4000端口访问了。</p><!-- ![picture](./img/test.jpg "localblog") --><h2 id="准备github仓库"><a href="#准备github仓库" class="headerlink" title="准备github仓库"></a>准备github仓库</h2><p>1.在github上新创建一个仓库，仓库名必须为username.github.io(若仓库名与GitHub账户名不同，则url为username.github.io&#x2F;repoisitoryname)。<br>2.在新仓库的Settings-&gt;Pages-&gt;Build and deployment选项中选择博客网页的源分支，一般为main&#x2F;(root)。<br>3.配置好GitHub的<a href="https://blog.csdn.net/weixin_42310154/article/details/118340458">SSH</a> ,否则在push时会遇到权限问题。<br>4.将本地仓库与远程仓库建立链接：</p><!-- [SSH](https://blog.csdn.net/weixin_42310154/article/details/118340458) --><pre><code><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在本地仓库目录下</span></span><br><span class="line">git init                <span class="comment">#初始化本地仓库</span></span><br><span class="line">git remote add origin git@github.com:yourName/repositoryname.git </span><br><span class="line"><span class="comment">#origin是远程仓库的别名</span></span><br></pre></td></tr></table></figure></code></pre><h2 id="部署到github"><a href="#部署到github" class="headerlink" title="部署到github"></a>部署到github</h2><p><strong>部署到个人网站与一般仓库不同，不能使用”add-commit-pull-push”的推送流程，要借助部署工具</strong></p><pre><code><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save        <span class="comment">#安装部署工具</span></span><br></pre></td></tr></table></figure></code></pre><p>修改根目录下_config.yml配置文档(在键和值之间有一个空格，否则会提示缩进错误！)</p><pre><code><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在文档的末尾</span></span><br><span class="line">deploy:</span><br><span class="line">    <span class="built_in">type</span>: git                                   <span class="comment">#部署方式</span></span><br><span class="line">    repo: &lt;git@github.com&gt;:yourname/blog.git    <span class="comment">#仓库链接</span></span><br><span class="line">    branch: main                                <span class="comment">#对应的分支</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#在文档的14-22行</span></span><br><span class="line">url: https://yourname.github.io/blog/           <span class="comment">#博客的网址</span></span><br><span class="line">root: /blog                                     <span class="comment">#GitHub中仓库的路径</span></span><br></pre></td></tr></table></figure></code></pre><p>修改后配置文档后，再次打开终端，输入以下命令进行远程部署。</p><pre><code><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean                                  <span class="comment"># 清除缓存文件等</span></span><br><span class="line">hexo g                                      <span class="comment"># 生成页面</span></span><br><span class="line">hexo d                                      <span class="comment"># 部署到远程</span></span><br></pre></td></tr></table></figure></code></pre><p>以后每次新发布文章后，都按照此流程进行部署。<br>这时打开GitHub仓库-&gt;action,可以看到部署的进程，一般需要几分钟。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/blog/2024/03/23/hello-world/"/>
      <url>/blog/2024/03/23/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
